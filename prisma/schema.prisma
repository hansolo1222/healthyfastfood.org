generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model meal {
  id                 String     @id @default(uuid())
  name               String
  slug               String
  restaurantSlug     String
  calories           Int?
  totalFat           Decimal?
  saturatedFat       Decimal?
  transFat           Decimal?
  cholesterol        Decimal?
  sodium             Decimal?
  totalCarbohydrates Decimal?
  dietaryFiber       Decimal?
  sugar              Decimal?
  protein            Decimal?
  proteinPerCalorie  Decimal?
  proteinCarbRatio   Decimal?
  sodiumPerCalorie   Decimal?
  sodiumPerProtein   Decimal?
  vitaminA           Int?
  vitaminC           Int?
  calcium            Int?
  iron               Int?
  published          Boolean    @default(true)
  categoryName       String
  allergensFalse     String[]
  allergensTrue      String[]
  ingredients        String?
  combinedSlug       String     @unique
  category           category   @relation(fields: [categoryName], references: [name])
  restaurant         restaurant @relation(fields: [restaurantSlug], references: [slug])
  variants           variant[]

  @@unique([restaurantSlug, slug])
}

model variant {
  id                 String   @id @default(uuid())
  variantName        String
  calories           Int?
  totalFat           Decimal?
  saturatedFat       Decimal?
  transFat           Decimal?
  cholesterol        Decimal?
  sodium             Decimal?
  totalCarbohydrates Decimal?
  dietaryFiber       Decimal?
  sugar              Decimal?
  protein            Decimal?
  proteinPerCalorie  Decimal?
  proteinCarbRatio   Decimal?
  sodiumPerCalorie   Decimal?
  sodiumPerProtein   Decimal?
  vitaminA           Int?
  vitaminC           Int?
  calcium            Int?
  iron               Int?
  allergensFalse     String[]
  allergensTrue      String[]
  ingredients        String?
  mealCombinedSlug   String
  meal               meal     @relation(fields: [mealCombinedSlug], references: [combinedSlug])
}

model restaurant {
  id    Int    @id @default(autoincrement())
  name  String @unique
  slug  String @unique
  rank  Int?
  meals meal[]
}

model category {
  id                  String  @default(uuid())
  name                String  @unique
  slug                String?
  meals               meal[]
  parentCategory      parentCategory? @relation(fields: [parentCategorySlug], references: [slug])
  parentCategorySlug  String?
  // parentCategory2     parentCategory? @relation(fields: [parentCategorySlug], references: [slug])
  // parentCategorySlug  String?
}


model parentCategory {
  id    String  @default(uuid())
  name  String  @unique
  slug  String @unique
  categories category[] 
}